cubes:
- name: open_lines
  sql_table: dbo.SOP10200
  data_source: default

  joins: []

  dimensions:
  #  - name: company
  #   sql: self._company
  #   type: string

  # IDENTIFIERS ##################################################################

  - name: document_class
    type: string
    public: false
    case:
      when:
      - sql: SOPTYPE = 1
        label: 'QUOTE'
      - sql: SOPTYPE = 2
        label: 'ORDER'
      - sql: SOPTYPE = 3
        label: 'INVOICE'
      - sql: SOPTYPE = 4
        label: 'RETURN'
      - sql: SOPTYPE = 5
        label: 'BACK_ORDER'
      - sql: SOPTYPE = 6
        label: 'FULFILLMENT_ORDER'
      else:
        label: "UNKNOWN"

  - name: external_id
    sql: "CONCAT({document_external_id}, '|', LNITMSEQ, '|', COALESCE(CMPNTSEQ, 0))"
    type: string

  - name: document_external_id
    sql: "CONCAT(TRIM({document_class}), '|', TRIM(SOPNUMBE))"
    type: string

  # - name: parent_line_external_id
  #   sql: parent_line_ext_id
  #   type: string

  # ITEM ######################################################################

  - name: item_number
    sql: ITEMNMBR
    type: string

  - name: item_description
    sql: ITEMDESC
    type: string

  - name: is_noninventory
    sql: NONINVEN
    type: boolean

  - name: is_dropship
    sql: DROPSHIP
    type: boolean

  - name: package_udf_val # Effectively comes from a config (Sales_Line_Item_Package_Smart_Field).
    sql: TRIM('')
    type: string
    public: false

  - name: is_package
    type: number
    case:
      when:
      - sql: "({package_udf_val} IS NOT NULL AND LEN({package_udf_val}) > 0) AND ITEMNMBR IS NOT NULL AND CMPNTSEQ IS NULL AND UPPER(ITEMNMBR) = UPPER({package_udf_val})"
        label: "1"
      else:
        label: "0"

  - name: is_component
    sql: "NOT {is_package}"
    type: string

  - name: uofm
    sql: UOFM
    type: string

  - name: base_uofm
    sql: BASEUOFM
    type: string

  # FINANCIALS & QUANTITIES ##################################################################

  - name: udf_cost # Effectively comes from a config (Margin_Cost_Field).
    sql: "0"
    type: number
    public: false

  - name: unit_cost
    type: number
    case:
      when:
      - sql: "{udf_cost} IS NOT NULL AND {udf_cost} > 0"
        label:
          sql: "{udf_cost}"
      else:
        label:
          sql: UNITCOST

  - name: extended_cost
    type: number
    case:
      when:
      - sql: "{udf_cost} IS NOT NULL"
        label:
          sql: "{unit_cost} * QUANTITY"
      else:
        label:
          sql: EXTDCOST

  - name: base_quantity_factor
    sql: QTYBSUOM
    type: number
    public: false

  - name: base_quantity
    type: number
    public: false
    case:
      when:
      - sql: "{base_quantity_factor} IS NOT NULL AND {base_quantity_factor} > 0"
        label:
          sql: "QUANTITY * {base_quantity_factor}"
      else:
        label: "0"

  - name: base_unit_cost
    type: number
    case:
      when:
      - sql: "{base_quantity} IS NOT NULL AND {base_quantity} > 0"
        label:
          sql: "{extended_cost} / {base_quantity}"
      else:
        label: "0"

  - name: unit_price
    sql: UNITPRCE
    type: number

  - name: extended_price
    sql: XTNDPRCE
    type: number

  - name: base_unit_price
    type: string
    case:
      when:
      - sql: "{base_quantity} IS NOT NULL AND {base_quantity} > 0"
        label:
          sql: "XTNDPRCE / {base_quantity}"
      else:
        label: "0"

  - name: tax_amount
    sql: TAXAMNT
    type: string

  - name: discount_amount
    sql: TRDISAMT
    type: string

  - name: quantity
    sql: QUANTITY
    type: string

  - name: quantity_allocated
    sql: ATYALLOC
    type: string

  - name: quantity_returned
    sql: QTYRTRND
    type: string

  # OTHER ##################################################

  - name: price_level_id
    sql: PRCLEVEL
    type: string


  - name: price_level
    sql: PRCLEVEL
    type: string


  - name: warehouse_id
    sql: LOCNCODE
    type: string


  - name: warehouse
    sql: LOCNCODE
    type: string


  - name: required_ship_date
    sql: ReqShipDate
    type: string


  - name: fulfillment_date
    sql: FUFILDAT
    type: string


  - name: actual_ship_date
    sql: ACTLSHIP
    type: string


  - name: markdown_amount
    sql: MRKDNAMT
    type: string

  - name: markdown_percent
    type: number
    case:
      when:
      - sql: "MRKDNPCT IS NOT NULL AND MRKDNPCT > 0"
        label:
          sql: "MRKDNPCT / 100"
      else:
        label: "0"

  measures:

  pre_aggregations:
# Pre-aggregation definitions go here.
# Learn more in the documentation: https://cube.dev/docs/caching/pre-aggregations/getting-started

